name: API Rate Limiting Test

on:
  # Run on push to main branch
  push:
    branches: [ main ]
  
  # Run on pull requests
  pull_request:
    branches: [ main ]
  
  # Allow manual triggering
  workflow_dispatch:
  
  # Schedule to run every 6 hours (optional)
  schedule:
    - cron: '0 */6 * * *'

jobs:
  test-api:
    runs-on: ubuntu-latest
    
    services:
      redis:
        image: redis:alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: backend/package-lock.json
    
    - name: Install backend dependencies
      run: |
        cd backend
        npm ci
    
    - name: Set up environment variables
      run: |
        cd backend
        echo "AVIATION_STACK_API_KEY=${{ secrets.AVIATION_STACK_API_KEY }}" >> .env
        echo "NODE_ENV=test" >> .env
        echo "PORT=4000" >> .env
    
    - name: Start backend server
      run: |
        cd backend
        npm start &
        sleep 10
        # Wait for server to be ready
        timeout 30 bash -c 'until curl -f http://localhost:4000/health; do sleep 1; done'
    
    - name: Run API health check
      run: |
        cd backend
        curl -f http://localhost:4000/health || exit 1
    
    - name: Test airport search
      run: |
        cd backend
        curl -f "http://localhost:4000/api/airports?keyword=DFW" || exit 1
    
    - name: Run future flights rate limiting test
      run: |
        cd backend
        echo "Looking for test files..."
        ls -la *.js | grep -E '(test|Test)' || echo "No test files found"
        
        # Try different locations for test files
        if [ -f "simpleFutureFlightsTest.js" ]; then
          echo "Running simpleFutureFlightsTest.js..."
          node simpleFutureFlightsTest.js
        elif [ -f "tests/simpleFutureFlightsTest.js" ]; then
          echo "Running tests/simpleFutureFlightsTest.js..."
          node tests/simpleFutureFlightsTest.js
        else
          echo "Test file not found, skipping..."
        fi
    
    - name: Test multiple API calls (rate limiting)
      run: |
        cd backend
        echo "Testing rate limiting with multiple calls..."
        for i in {1..3}; do
          echo "Call $i:"
          curl -s "http://localhost:4000/api/flights?originLocationCode=DFW&destinationLocationCode=JFK&departureDate=2025-07-28&adults=1&travelClass=ECONOMY" | jq '.apiResponse.source // "No source"' || echo "Call $i failed"
          sleep 2
        done
    
    - name: Test different routes
      run: |
        cd backend
        echo "Testing different routes..."
        curl -s "http://localhost:4000/api/flights?originLocationCode=LAX&destinationLocationCode=ORD&departureDate=2025-07-28&adults=1&travelClass=ECONOMY" | jq '.apiResponse.source // "No source"' || echo "LAX-ORD test failed"
        curl -s "http://localhost:4000/api/flights?originLocationCode=SFO&destinationLocationCode=BOS&departureDate=2025-07-28&adults=1&travelClass=ECONOMY" | jq '.apiResponse.source // "No source"' || echo "SFO-BOS test failed"
